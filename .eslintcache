[{"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\index.js":"1","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\App.js":"2","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\spotify.js":"3","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Login.js":"4","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Main.js":"5","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\StateProvider.js":"6","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\reducer.js":"7","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\TopTracks.js":"8","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\TrackList.js":"9","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\TopArtists.js":"10","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\ArtistList.js":"11","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\User.js":"12","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Playlists.js":"13","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Recent.js":"14","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Nav.js":"15","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Artist.js":"16","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\FullTopTracks.js":"17","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Playlist.js":"18","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\FullTopArtists.js":"19","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\FeatureChart.js":"20","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\util.js":"21","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\ArtistGrid.js":"22","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Recommendation.js":"23","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Track.js":"24"},{"size":402,"mtime":1613563668291,"results":"25","hashOfConfig":"26"},{"size":1016,"mtime":1608726747044,"results":"27","hashOfConfig":"26"},{"size":956,"mtime":1608794248363,"results":"28","hashOfConfig":"26"},{"size":469,"mtime":1613565925045,"results":"29","hashOfConfig":"26"},{"size":5147,"mtime":1612954882268,"results":"30","hashOfConfig":"26"},{"size":373,"mtime":1608558756912,"results":"31","hashOfConfig":"26"},{"size":2038,"mtime":1613561317192,"results":"32","hashOfConfig":"26"},{"size":590,"mtime":1613470772419,"results":"33","hashOfConfig":"26"},{"size":2056,"mtime":1613567113628,"results":"34","hashOfConfig":"26"},{"size":637,"mtime":1613470656689,"results":"35","hashOfConfig":"26"},{"size":1020,"mtime":1613567140151,"results":"36","hashOfConfig":"26"},{"size":1589,"mtime":1613562743801,"results":"37","hashOfConfig":"26"},{"size":1307,"mtime":1613567185142,"results":"38","hashOfConfig":"26"},{"size":1017,"mtime":1613567087529,"results":"39","hashOfConfig":"26"},{"size":2684,"mtime":1613469527121,"results":"40","hashOfConfig":"26"},{"size":2286,"mtime":1613563332041,"results":"41","hashOfConfig":"26"},{"size":1545,"mtime":1613562945610,"results":"42","hashOfConfig":"26"},{"size":2716,"mtime":1613563380802,"results":"43","hashOfConfig":"26"},{"size":1586,"mtime":1613562857274,"results":"44","hashOfConfig":"26"},{"size":3227,"mtime":1612968362884,"results":"45","hashOfConfig":"26"},{"size":1767,"mtime":1612971365445,"results":"46","hashOfConfig":"26"},{"size":775,"mtime":1613567160982,"results":"47","hashOfConfig":"26"},{"size":1345,"mtime":1613563403159,"results":"48","hashOfConfig":"26"},{"size":4029,"mtime":1613563104627,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"143jzu1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\index.js",[],["106","107"],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\App.js",["108"],"import React, { useEffect } from \"react\";\nimport { useStateValue } from \"./context/StateProvider\";\nimport Main from \"./components/Main\";\nimport { getTokenFromResponse } from \"./context/spotify\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  const localToken = window.localStorage.getItem('spotify_access_token');\n\n  useEffect(() => {\n    // Get access token\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let accessToken = hash.access_token;\n\n    // check with localToken\n    if (!localToken || localToken === 'undefined') {\n      window.localStorage.setItem('spotify_access_token', accessToken);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: accessToken,\n      });\n    } else {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: localToken,\n      });\n    }\n\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {token ? <Main /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\spotify.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Login.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Main.js",["109"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport Nav from \"./Nav\";\r\nimport User from \"./User\";\r\nimport Playlists from \"./Playlists\";\r\nimport Recent from \"./Recent\";\r\nimport FullTopArtists from \"./FullTopArtists\";\r\nimport FullTopTracks from \"./FullTopTracks\";\r\nimport Track from \"./Track\";\r\nimport Playlist from \"./Playlist\";\r\nimport Artist from \"./Artist\";\r\nimport Recommendation from \"./Recommendation\";\r\n\r\nconst Main = () => {\r\n    const [{ token }, dispatch] = useStateValue();\r\n\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Get current user\r\n        axios('https://api.spotify.com/v1/me', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: res.data\r\n                });\r\n            })\r\n        \r\n        // Get following    \r\n        axios('https://api.spotify.com/v1/me/following?type=artist', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_FOLLOWING\",\r\n                    following: res.data.artists.items.length\r\n                });\r\n            }) \r\n\r\n        /* Get top tracks */\r\n        // Long range\r\n        axios('https://api.spotify.com/v1/me/top/tracks?limit=20&time_range=long_term', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_TOPTRACKS_LONG\",\r\n                    topTracks: res.data.items\r\n                });\r\n            })\r\n\r\n        // Mid range\r\n        axios('https://api.spotify.com/v1/me/top/tracks?limit=20&time_range=medium_term', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_TOPTRACKS_MED\",\r\n                    topTracks: res.data.items\r\n                });\r\n            })  \r\n            \r\n        // Short range\r\n        axios('https://api.spotify.com/v1/me/top/tracks?limit=20&time_range=short_term', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_TOPTRACKS_SHORT\",\r\n                    topTracks: res.data.items\r\n                });\r\n            })    \r\n\r\n        /* Get Top Artists */\r\n        // Long range \r\n        axios('https://api.spotify.com/v1/me/top/artists?limit=20&time_range=long_term', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_TOPARTISTS_LONG\",\r\n                    topArtists: res.data.items\r\n                });\r\n            })\r\n\r\n        // Mid range \r\n        axios('https://api.spotify.com/v1/me/top/artists?limit=20&time_range=medium_term', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_TOPARTISTS_MED\",\r\n                    topArtists: res.data.items\r\n                });\r\n            })\r\n         \r\n        // Short range     \r\n        axios('https://api.spotify.com/v1/me/top/artists?limit=20&time_range=short_term', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_TOPARTISTS_SHORT\",\r\n                    topArtists: res.data.items\r\n                });\r\n            })  \r\n\r\n        // Get playlists\r\n        axios('https://api.spotify.com/v1/me/playlists', {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                dispatch({\r\n                    type: \"SET_PLAYLISTS\",\r\n                    playlists: res.data.items\r\n                });\r\n            })     \r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <Nav />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <User />\r\n                </Route>\r\n                <Route path=\"/artists\">\r\n                    <FullTopArtists />\r\n                </Route>\r\n                <Route path=\"/tracks\">\r\n                    <FullTopTracks />\r\n                </Route>\r\n                <Route path=\"/playlists\">\r\n                    <Playlists />\r\n                </Route>\r\n                <Route path=\"/recent\">\r\n                    <Recent />\r\n                </Route>\r\n                <Route path=\"/track/:trackId\" component={Track}>\r\n                </Route>\r\n                <Route path=\"/playlist/:playlistId\" component={Playlist}>\r\n                </Route>\r\n                <Route path=\"/artist/:artistId\" component={Artist}>\r\n                </Route>\r\n                <Route path=\"/recommendation\" component={Recommendation}>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n      \r\n    );\r\n}\r\n\r\nexport default Main;","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\StateProvider.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\reducer.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\TopTracks.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\TrackList.js",["110","111"],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\TopArtists.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\ArtistList.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\User.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Playlists.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Recent.js",["112"],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Nav.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Artist.js",["113"],"import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"../css/Artist.css\";\r\nimport axios from 'axios';\r\nimport TrackList from \"./TrackList\";\r\nimport { capitaliseLetter, formatFollowers } from \"../context/util\";\r\n\r\nconst Artist = ({ location }) => {\r\n    const { id } = location.state;\r\n    const [{ token }] = useStateValue();\r\n    const [info, setInfo] = useState();\r\n    const [popularTracks, setPopularTracks] = useState();\r\n\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Get artist info\r\n        axios.get(`https://api.spotify.com/v1/artists/${id}`, {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => setInfo(res.data));\r\n\r\n        // Get artist's top tracks\r\n        axios.get(`https://api.spotify.com/v1/artists/${id}/top-tracks?market=AU`, {\r\n            method: 'GET',\r\n            headers\r\n        }) \r\n            .then(res => setPopularTracks(res.data.tracks));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"flex__container\">\r\n                {info && (<div className=\"playlist__info\">\r\n                    <div className=\"cover__img\">\r\n                        <img src={info.images[1].url} alt=\"Track Pic\" style={{ margin: \"20px 0\" }} />\r\n                    </div>\r\n                    <div className=\"playlist__detail\">\r\n                        <h1 className=\"playlist__name\">{info.name}</h1>\r\n                        <h3>{formatFollowers(info.followers.total)} Followers</h3>\r\n                        <a href={info.external_urls.spotify} target=\"_blank\" rel=\"noreferrer\" className=\"more spotify\">\r\n                            Follow on spotify\r\n                        </a>\r\n                    </div>\r\n                </div>)}\r\n                <div className=\"artist__tracks\">\r\n                    <h2 style={{ marginBottom: 0 }}>Genre</h2>\r\n                    <h3 className=\"genre\">{info && info.genres.map(g => capitaliseLetter(g)).join(\", \")}</h3>\r\n                    <h2>Popular Tracks</h2>\r\n                    {popularTracks && <TrackList data={popularTracks} />}\r\n                </div>\r\n            </div></div>\r\n    );\r\n}\r\n\r\nexport default Artist;","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\FullTopTracks.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Playlist.js",["114","115"],"import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"../css/Artist.css\";\r\nimport TrackList from \"./TrackList\";\r\nimport axios from 'axios';\r\nimport FeatureChart from \"./FeatureChart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Playlist = ({ location }) => {\r\n    const { data } = location.state;\r\n    const [{ token }] = useStateValue();\r\n    const [playlistTracks, setPlaylistTracks] = useState();\r\n    const [trackIds, setTrackIds] = useState();\r\n    const [features, setFeatures] = useState();\r\n    \r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token,\r\n    };\r\n    \r\n    useEffect(() => {\r\n        // Get tracks from playlist\r\n        axios(`https://api.spotify.com/v1/users/spotify/playlists/${data.id}/tracks`, {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => setPlaylistTracks(res.data.items.map(item => item.track)))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // get track ids\r\n        if (playlistTracks) {\r\n            setTrackIds(playlistTracks.map(item => item.id).join(\",\"))\r\n        }\r\n    }, [playlistTracks])\r\n\r\n    useEffect(() => {\r\n        if (trackIds) {\r\n            // Get audio feature for all tracks\r\n            axios(`https://api.spotify.com/v1/audio-features?ids=${trackIds}`, {\r\n                method: 'GET',\r\n                headers\r\n            })\r\n                .then(res => setFeatures(res.data.audio_features))\r\n        }\r\n    }, [trackIds])\r\n    \r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"flex__container\">\r\n                {data && (<div className=\"playlist__info\">\r\n                    <div className=\"cover__img\">\r\n                        <img src={data.images[0].url} alt=\"Track Pic\" className=\"playlist__pic\" />\r\n                    </div>\r\n                    <div className=\"playlist__detail\">\r\n                        <h1 className=\"playlist__name\">{data.name}</h1>\r\n                        <h4 className=\"playlist__owner\">{data.tracks.total + \" TRACKS · By \" + data.owner.display_name}</h4>\r\n                        <Link to={{\r\n                            pathname: \"/recommendation\",\r\n                            state: { ids: trackIds },\r\n                        }} className=\"more spotify\">\r\n                            Get Recommendations\r\n                            </Link>\r\n                        {features && <FeatureChart data={features} />}\r\n                    </div>\r\n                </div>)}\r\n\r\n                {playlistTracks && <div className=\"playlist__tracks\"><TrackList data={playlistTracks} /></div>}\r\n                \r\n            </div></div>\r\n    );\r\n}\r\n\r\nexport default Playlist;","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\FullTopArtists.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\FeatureChart.js",["116","117"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Track.css\";\r\nimport Chart from 'chart.js';\r\n\r\nconst FeatureChart = (features) => {\r\n    const [dataset, setDataset] = useState();\r\n\r\n    const averageFeature = (attribute) => {\r\n        return (features.data.map(f => f ? f[attribute] : 0).reduce((a, b) => a + b, 0) / features.data.length).toFixed(4);\r\n    }    \r\n    \r\n    const createChart = () => {\r\n        const ctx = document.getElementById('chart');\r\n        new Chart(ctx, {\r\n            type: 'horizontalBar',\r\n            data: {\r\n                labels: ['Acousticness', 'Danceability', 'Energy', 'Positivity', 'Liveness', 'Speechiness', 'Instrumentalness'],\r\n                datasets: [{\r\n                    label: '',\r\n                    data: dataset,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.3)',\r\n                        'rgba(255, 159, 64, 0.3)',\r\n                        'rgba(255, 206, 86, 0.3)',\r\n                        'rgba(75, 192, 192, 0.3)',\r\n                        'rgba(54, 162, 235, 0.3)',\r\n                        'rgba(104, 132, 245, 0.3)',\r\n                        'rgba(153, 102, 255, 0.3)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255,99,132,1)',\r\n                        'rgba(255, 159, 64, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(104, 132, 245, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                    ],\r\n                    borderWidth: 1\r\n                }]\r\n            },\r\n            options: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Audio Features',\r\n                    fontSize: 16,\r\n                    fontFamily: 'Heebo',\r\n                    fontColor: '#ffffff',\r\n                    padding: 30,\r\n                },\r\n                legend: {\r\n                    display: false,\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        gridLines: {\r\n                            color: 'rgba(255, 255, 255, 0.3)',\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let data = [];\r\n        data.push(parseFloat(averageFeature(\"acousticness\")));\r\n        data.push(parseFloat(averageFeature(\"danceability\")));\r\n        data.push(parseFloat(averageFeature(\"energy\")));\r\n        data.push(parseFloat(averageFeature(\"valence\")));\r\n        data.push(parseFloat(averageFeature(\"liveness\")));\r\n        data.push(parseFloat(averageFeature(\"speechiness\")));\r\n        data.push(parseFloat(averageFeature(\"instrumentalness\")));\r\n        setDataset(data);\r\n    }, []);\r\n\r\n    useEffect(() => {     \r\n        createChart();\r\n    }, [dataset])\r\n\r\n    return (\r\n        <canvas id=\"chart\" width=\"400\" height=\"400\" />\r\n    );\r\n}\r\n\r\nexport default FeatureChart;","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\context\\util.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\ArtistGrid.js",[],"C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Recommendation.js",["118"],"import React, { useState, useEffect } from \"react\";\r\nimport TrackList from \"./TrackList\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport axios from 'axios';\r\n\r\nconst Recommendation = ({ location }) => {\r\n    const [{ token }] = useStateValue();\r\n    const [recommendation, setRecommendation] = useState();\r\n\r\n    const shuffledTracks = location.state.ids;\r\n    const seed_tracks = shuffledTracks.split(\",\").sort(() => 0.5 - Math.random()).slice(0, 5).join(\",\");\r\n    const seed_artists = '';\r\n    const seed_genres = '';\r\n\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Get recommendation\r\n        axios.get(`https://api.spotify.com/v1/recommendations?seed_tracks=${seed_tracks}&seed_artists=${seed_artists}&seed_genres=${seed_genres}`, {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => setRecommendation(res.data.tracks))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main__container\">\r\n                <div className=\"heading\">\r\n                    <h1 className=\"user__info\">Recommended Tracks</h1>\r\n                </div>\r\n                {recommendation && <TrackList data={recommendation} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recommendation;","C:\\Users\\Giang Cao\\Documents\\GitHub\\spotify-react\\src\\components\\Track.js",["119"],"import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"../css/Track.css\";\r\nimport axios from 'axios';\r\nimport FeatureChart from \"./FeatureChart\";\r\n\r\nimport { convertTrackDuration, noteToKey, modeToMode } from \"../context/util\";\r\n\r\nconst Track = ({ location }) => {\r\n    const { id } = location.state;\r\n    const [{ token }] = useStateValue();\r\n    const [info, setInfo] = useState(null);\r\n    const [feature, setFeature] = useState(null);\r\n\r\n    const headers = {\r\n        'Authorization': 'Bearer ' + token\r\n    };\r\n    \r\n    useEffect(() => {\r\n        // Get track info\r\n        axios(`https://api.spotify.com/v1/tracks/${id}`, {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => {\r\n                setInfo({\r\n                    name: res.data.name,\r\n                    artist: res.data.artists.map(a => a.name),\r\n                    image: res.data.album.images[1].url,\r\n                    album: res.data.album.name,\r\n                    year: res.data.album.release_date.slice(0,4),\r\n                    popularity: res.data.popularity,\r\n                    duration: res.data.duration_ms,\r\n                    href: res.data.external_urls.spotify\r\n                });\r\n            })\r\n\r\n        // Get track feature\r\n        axios(`https://api.spotify.com/v1/audio-features/${id}`, {\r\n            method: 'GET',\r\n            headers\r\n        })\r\n            .then(res => setFeature(res.data))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"main__container\">\r\n                {info && (<div className=\"track__info detail\">\r\n                    <div className=\"track__img\"><img src={info.image} alt=\"Track Pic\" /></div>\r\n                    <div className=\"detail__container\">\r\n                        <h1 className=\"detail__name\">{info.name}</h1>\r\n                        <h2 className=\"detail__artist\">{info.artist.join(\", \")}</h2>\r\n                        <h4 className=\"detail__album\">{info.album + \" · \" + info.year}</h4>\r\n                        <a href={info.href} target=\"_blank\" rel=\"noreferrer\" className=\"more spotify\">\r\n                            Play on spotify \r\n                        </a>\r\n                    </div>\r\n                </div>)}\r\n\r\n                {(info && feature) && (<div className=\"detail__stats\">\r\n                    <div className=\"stats__item\">\r\n                        <h2 className=\"stats__num\">{info.popularity + \"%\"}</h2>\r\n                        <p className=\"stats__title\">Popularity</p>\r\n                    </div>\r\n                    <div className=\"stats__item\">\r\n                        <h2 className=\"stats__num\">{convertTrackDuration(info.duration)}</h2>\r\n                        <p className=\"stats__title\">Duration</p>\r\n                    </div>\r\n                    <div className=\"stats__item\">\r\n                        <h2 className=\"stats__num\">{noteToKey(feature.key)}</h2>\r\n                        <p className=\"stats__title\">Key</p>\r\n                    </div>\r\n                    <div className=\"stats__item\">\r\n                        <h2 className=\"stats__num\">{modeToMode(feature.mode)}</h2>\r\n                        <p className=\"stats__title\">Mode</p>\r\n                    </div>\r\n                    <div className=\"stats__item\">\r\n                        <h2 className=\"stats__num\">{parseInt(feature.tempo)}</h2>\r\n                        <p className=\"stats__title\">Tempo (BPM)</p>\r\n                    </div>\r\n                    <div className=\"stats__item\">\r\n                        <h2 className=\"stats__num\">{feature.loudness.toFixed(2)}</h2>\r\n                        <p className=\"stats__title\">Loudness</p>\r\n                    </div>\r\n                </div>)}\r\n                \r\n                <div className=\"feature__chart\">\r\n                    {feature && <FeatureChart data={[feature]} />}\r\n                </div>\r\n               \r\n            </div></div>\r\n    );\r\n}\r\n\r\nexport default Track;",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":33,"column":6,"nodeType":"126","endLine":33,"endColumn":8,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":133,"column":8,"nodeType":"126","endLine":133,"endColumn":10,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":16,"column":8,"nodeType":"126","endLine":16,"endColumn":10,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":24,"column":8,"nodeType":"126","endLine":24,"endColumn":18,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"134","line":21,"column":8,"nodeType":"126","endLine":21,"endColumn":10,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":32,"column":8,"nodeType":"126","endLine":32,"endColumn":10,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"138","line":27,"column":8,"nodeType":"126","endLine":27,"endColumn":10,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"134","line":45,"column":8,"nodeType":"126","endLine":45,"endColumn":18,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":80,"column":8,"nodeType":"126","endLine":80,"endColumn":10,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"143","line":84,"column":8,"nodeType":"126","endLine":84,"endColumn":17,"suggestions":"144"},{"ruleId":"124","severity":1,"message":"145","line":26,"column":8,"nodeType":"126","endLine":26,"endColumn":10,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"136","line":44,"column":8,"nodeType":"126","endLine":44,"endColumn":10,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'localToken'. Either include them or remove the dependency array.","ArrayExpression",["150"],"React Hook useEffect has missing dependencies: 'dispatch' and 'headers'. Either include them or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'data.length'. Either include it or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. If 'setDisplay' needs the current value of 'data', you can also switch to useReducer instead of useState and read 'data' in the reducer.",["153"],"React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has missing dependencies: 'headers' and 'id'. Either include them or remove the dependency array.",["155"],"React Hook useEffect has missing dependencies: 'data.id' and 'headers'. Either include them or remove the dependency array.",["156"],["157"],"React Hook useEffect has a missing dependency: 'averageFeature'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'createChart'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has missing dependencies: 'headers' and 'seed_tracks'. Either include them or remove the dependency array.",["160"],["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"172","fix":"184"},"Update the dependencies array to be: [dispatch, localToken]",{"range":"185","text":"186"},"Update the dependencies array to be: [dispatch, headers]",{"range":"187","text":"188"},"Update the dependencies array to be: [data.length]",{"range":"189","text":"190"},"Update the dependencies array to be: [data, lazyload]",{"range":"191","text":"192"},"Update the dependencies array to be: [headers]",{"range":"193","text":"194"},"Update the dependencies array to be: [headers, id]",{"range":"195","text":"196"},"Update the dependencies array to be: [data.id, headers]",{"range":"197","text":"198"},"Update the dependencies array to be: [headers, trackIds]",{"range":"199","text":"200"},"Update the dependencies array to be: [averageFeature]",{"range":"201","text":"202"},"Update the dependencies array to be: [createChart, dataset]",{"range":"203","text":"204"},"Update the dependencies array to be: [headers, seed_tracks]",{"range":"205","text":"206"},{"range":"207","text":"196"},[898,900],"[dispatch, localToken]",[4082,4084],"[dispatch, headers]",[530,532],"[data.length]",[694,704],"[data, lazyload]",[647,649],"[headers]",[1050,1052],"[headers, id]",[962,964],"[data.id, headers]",[1498,1508],"[headers, trackIds]",[3035,3037],"[averageFeature]",[3102,3111],"[createChart, dataset]",[955,957],"[headers, seed_tracks]",[1512,1514]]